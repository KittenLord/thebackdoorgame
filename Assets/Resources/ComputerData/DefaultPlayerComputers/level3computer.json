{
  "Ip": "127.0.0.1",
  "Users": {
    "USERNAME_REPLACE": {
      "Username": "USERNAME_REPLACE",
      "Password": "PASSWORD_REPLACE",
      "AccessLevel": 5
    },
    "root": {
      "Username": "root",
      "Password": "123",
      "AccessLevel": 5
    }
  },
  "FileSystem": [
    {
      "Path": "~",
      "Permissions": {
        "Permissions": {
          "Inspect": [],
          "Read": [],
          "Write": [
            "root"
          ],
          "Delete": [
            "root"
          ],
          "Manage": [
            "root"
          ],
          "Create": [
            "root"
          ],
          "DeleteInner": [
            "root"
          ],
          "ManageInner": [
            "root"
          ],
          "Rename": [
            "root"
          ],
          "RenameInner": [
            "root"
          ],
          "Run": []
        }
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system",
      "Permissions": {
        "Permissions": {
          "Inspect": [
            "5"
          ],
          "Manage": [],
          "Read": [],
          "Write": [],
          "Delete": [],
          "DeleteInner": [],
          "ManageInner": [],
          "Rename": [],
          "RenameInner": [],
          "Create": [],
          "Run": []
        }
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE",
      "Permissions": {
        "Permissions": {
          "Read": [
            "USERNAME_REPLACE"
          ],
          "Write": [
            "USERNAME_REPLACE"
          ],
          "Delete": [
            "root"
          ],
          "Manage": [
            "root"
          ],
          "Inspect": [
            "USERNAME_REPLACE"
          ],
          "Create": [
            "USERNAME_REPLACE"
          ],
          "DeleteInner": [
            "USERNAME_REPLACE"
          ],
          "ManageInner": [
            "USERNAME_REPLACE"
          ],
          "Rename": [
            "root"
          ],
          "RenameInner": [
            "USERNAME_REPLACE"
          ],
          "Run": [
          ]
        }
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/desktop",
      "Permissions": {
        "Permissions": {
          "Read": [],
          "Write": [
            "root"
          ],
          "Delete": [
            "root"
          ],
          "DeleteInner": [
            "root"
          ],
          "Manage": [
            "root"
          ],
          "ManageInner": [
            "root"
          ],
          "Inspect": [],
          "Create": [
            "root"
          ],
          "Rename": [
            "root"
          ],
          "RenameInner": [
            "root"
          ],
          "Run": []
        }
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/installed",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/installed/cd.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Change directory\n#help cd is used to change your current directory. It accepts one path argument, relative or absolute. You can also put . to stay in the same directory, or .. to go one directory above.\\nSyntax: cd <path>\\nExamples:\\ncd ~/users/admin # Navigating using absolute path\\ncd desktop # Navigating using relative path\\ncd ../../directory # Going two directories above and to another\\ncd ././././ # Stay in the same directory\ncd"
    },
    {
      "Path": "~/system/installed/ls.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc List files in a directory\n#help ls is used to view contents of a directory. Provide 0 arguments to view the current directory, provide 1 path argument to view specified directory.\\nSyntax: ls [path]\\nExamples:\\nls # List current directory\\nls ~/users # List specified directory \nls"
    },
    {
      "Path": "~/system/installed/file.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Create a file\n#help file is used to create a file in the current directory. It requires 1 argument: file name.\\nSyntax: file <path>\\nExamples:\\nfile test.txt # Create a file named \"test.txt\"\\n\nfile ~/users/admin/test.txt # Create a file named \"test.txt\" in the specified directory\nfile"
    },
    {
      "Path": "~/system/installed/rename.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Rename a file/directory\n#help rename is used to rename a file or directory.\\nSyntax: rename <path> <newName>\\nExamples:\\nrename ~/users/admin/test.txt a.txt # Renames a file named test.txt to \"a.txt\"\nrename"
    },
    {
      "Path": "~/system/installed/del.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Recursively delete a file/directory\n#help del is used to delete a file or a directory. USE WITH CAUTION! It cannot be undone, and will delete every file available inside a directory\\nSyntax: del <path>\\nExamples:\\ndel test.txt # Delete a file named test.txt\\ndel ~/users/temp # Recursively delete a folder named temp\ndel"
    },
    {
      "Path": "~/system/installed/dir.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Create a directory\n#help dir is used to create a directory in the current one. It requires 1 argument: directory name.\\nSyntax: dir <path>\\nExamples:\\ndir test # Create a directory named \"test\"\\ndir ~/users/admin/test # Create a directory named \"test\" in the specified directory\ndir"
    },
    {
      "Path": "~/system/installed/txt.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A simple lightweight text editor.\n#help txt is used to quickly edit files. It requires 1 argument: path to a file.\\nSyntax: txt <path>\\nExamples:\\ntxt file.txt # Opens \"file.txt\" in the editor\\ntxt ~/users/admin/file.txt # Opens \"file.txt\" in the editor\ntxt"
    },
    {
      "Path": "~/system/installed/tree.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc See the tree view of a directory\n#help tree is used to efficiently inspect the inner contents of a directory in a tree-like view. It accepts 0 or 1 path argument.\\nSyntax: tree [path]\\nExamples:\\ntree # Tree view of the current directory.\\ntree ~ # Tree view of the whole system.\\ntree ~/users # Tree view of the specified directory\ntree"
    },
    {
      "Path": "~/system/installed/auth.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [],
          "Run": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Authorize as a user\n#help auth is used to authorize as a user. It accepts 1, 2 or 3 arguments - username, optional access level, optional runmode. A new terminal instance is created, unless specified otherwise\\nSyntax: auth <username> [accesslevel] [this|new]\\nExamples:\\nauth admin # Authorize as user \"admin\" with access level 0\\nauth admin 5 # Authorize as user \"admin\" with access level 5\\nauth admin max # Authorize as user \"admin\" with the max available access level\\nauth admin 3 this # Authorize as user \"admin\" with access level 3 without creating a new terminal \nauth"
    },
    {
      "Path": "~/system/installed/permslist.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc View file permissions\n#help permslist is used to quickly check what permissions a file or a directory has. It requires 0 or 1 path argument.\\nSyntax: permslist [path]\\nExamples:\\npermslist file.txt # Displays permissions of a file named \"file.txt\"\\npermslist ~/users/admin # Displays permissions of the specified directory.\\npermslist # Displays permissions of the current directory\npermslist"
    },
    {
      "Path": "~/system/installed/remct.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [
          ]
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Connect remotely to other computers\n#help remct is used to connect and manage other computers. You'll need to know user credentials to connect though.\\nSyntax: remct <ip> <username>\\nExamples:\\nremct 127.0.0.1 admin # Connects to ip 127.0.0.1 and prompts to login to admin user\nremct"
    },
    {
      "Path": "~/system/internal",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/gui.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/boot.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/data",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/data/1.dat",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/data/2.dat",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/data/3.dat",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": ""
    },
    {
      "Path": "~/system/internal/.config",
      "Permissions": {
        "Permissions": {
          "Read": [
            "root"
          ],
          "Write": [],
          "Delete": [],
          "Manage": [],
          "Inspect": [],
          "Create": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/installed/perms.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc File permission editor\n#help perms is used as a powerful file/directory permission editor. You cannot edit permissions of a file, if you do not have the required MANAGE access. It requires 0 or 1 path argument.\\nSyntax: perms [path]\\nExamples:\\nperms file.txt # Edit permissions of a file named \"file.txt\"\\nperms ~/users/admin # Edit permissions of the specified directory\\nperms # Edit permissions of the current directory\nperms"
    },
    {
      "Path": "~/system/installed/terminal.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [],
          "Run": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A command terminal\n#help terminal is used to launch a terminal which can execute user commands or scripts. The new terminal will have the same user as the parent, but access level will be set to 0.\\nSyntax: terminal\\nExamples:\\nterminal # Starts a terminal\nterminal"
    },
    {
      "Path": "~/system/installed/kill.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Kill the terminal process\n#help kill is used to kill the terminal you are in.\\nSyntax: kill\\nExamples:\\nkill # Kills the terminal.\nkill"
    },
    {
      "Path": "~/system/installed/tms.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [
            "root"
          ]
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc TerMinal Script (TMS) compiler\n#help tms is used to compile the TerMinal Script (TMS) scripts into executable files. TMS scripts are a list of terminal commands, executed in a sequence. tms requires 1 path argument: source script.\\nSyntax: tms <path>\\nExamples: tms file.tms # Compile a file named \"file.tms\" into an executable named \"file.exe\"\\ntms ~/users/admin/file.tms # Compile a file named \"file.tms\" into an executable named \"file.exe\"\ntms"
    },
    {
      "Path": "~/system/installed/run.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [],
          "Run": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Run an executable\n#help run is used to run executable (.exe) files. It requires 1 or 2 pre-specified arguments: executable file path and an optional run mode. If more than 2 arguments will be provided, they will be used as the executable arguments.\\nSyntax: run <path> [mode]\\nExamples:\\nrun a.exe # Run an executable named \"a.exe\"\\nrun a.exe new # Runs an executable named \"a.exe\" in the new terminal.\\nrun ~/system/installed/tree.exe this ~/users # Runs \"tree.exe\" in the current terminal and provides \"~/users\" as an argument. This is equivalent to \"tree ~/users\"  \nrun"
    },
    {
      "Path": "~/system/installed/help.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Help command\n#help help is used to list all available commands and display info about them, or to provide help a specific command.\\nSyntax: help [command]\\nExamples:\\nhelp # Lists all installed commands\\nhelp cd # Provides help on cd command\nhelp"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/desktop/.settings",
      "Permissions": {
        "Permissions": {
          "Read": [
            "5 USERNAME_REPLACE"
          ],
          "Write": [
            "5 USERNAME_REPLACE"
          ],
          "Delete": [],
          "DeleteInner": [],
          "Manage": [],
          "ManageInner": [],
          "Inspect": [
            "5 USERNAME_REPLACE"
          ],
          "Create": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/system/installed/say.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc Display user text\n#help say is used to display the specified text in the terminal. It requires 2 arguments: color and text in double-quotes.\\nSyntax: say <color> \"<text>\"\\nExamples:\\nsay #FFFFFF \"test test\" # Displays \"test test\" in color white\\nsay #FF0000 \"error error\" # Displays \"error error\" in color red.\nsay"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/desktop/Terminal.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": "#EXECUTABLE_HEADER___\n#icon terminal\nterminal\n#"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/desktop/Unicorn.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": "#EXECUTABLE_HEADER___\n#icon terminal\nunicorn\n#"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/desktop/TrophyPlusPlus.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": "#EXECUTABLE_HEADER___\n#icon terminal\ntrophypp\n#"
    },
    {
      "Path": "~/system/installed/task.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A CLI task manager\n#help task is used to manage processes running on the computer. It runs in several modes: task list, task kill.\\ntask list is used to list all tasks on the computer.\\ntask kill is used to kill the specified process if you have enough rights to do so. Requires the provess PID, which can be viewed by using \"task list\".\\nSyntax: task <list|kill> [pid]\\nExamples:\\ntask list # List all tasks\\ntask kill 12831831623 # Kill the process with the specified process id\ntask"
    },
    {
      "Path": "~/system/installed/mario.exe",
      "Permissions": {
        "Permissions": {
          "Inspect": [
          ]
        }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A package manager\n#help mario is a simple package manager.\\nmario install downloads the specified package\\nmario list shows all available packages\\nSyntax:\\nmario install <package>\\nmario list\\nExamples:\\nmario install unicorn # Installs Unicorn\\nmario list # Displays all available packages\nmario"
    },
    {
      "Path": "~/system/installed/port.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A port utility to manage files\n#help port is a utility to upload and download files using computer ports. There are several subcommands: port open, port close, port download\\nport open opens the specified port and uploads a file\\nport close closes an opened port\\nport download fetches file from other computer's port\\nSyntax:\\nport open <port> <file>\\nport close <port>\\nport download <ip> <port>\\nExamples:\\nport open 12415 file.txt # Opens port 12415 and uploads file named file.txt\\nport close 12415 # Closes port 12415\\nport download 127.0.0.1 8080 # Downloads a file located on port 8080 on computer with ip 127.0.0.1\nport"
    },
    {
      "Path": "~/system/installed/unicorn.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A simple messenger\n#help unicorn is a lightweight, end-to-end encrypted messenger.\\nSyntax: unicorn\\nExamples:\\nunicorn # Starts Unicorn \nunicorn"
    },
    {
      "Path": "~/system/installed/soorch.exe",
      "Permissions": {
        "Permissions": { "Inspect": [ "root" ] }
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A web browser\n#help soorch is a web browser used to browse web.\\nSyntax: soorch\\nExamples:\\nsoorch # Starts Soorch \nunicorn"
    },
    {
      "Path": "~/system/installed/trophypp.exe",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "#EXECUTABLE_HEADER___\n#desc A trophy gifting app\n#help Trophy++ is an improved version of Trophy to give awards to your colleagues.\\nSyntax: trophypp\\nExamples:\\ntrophypp # Starts Trophy++ \ntrophypp"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/test.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/notes",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/notes/note.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "todo: hit silver 2 in league before wednesday"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/notes/note1.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "minecraft 1.7.10\nindustrial craft 2\nbuildcraft\nto be expanded"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/notes/newnote.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "try also checking port MARIOTROPHYPORT_REPLACE :)"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/innocuous_directory",
      "Permissions": {
        "Permissions": {
          "Read": [],
          "Write": [],
          "Delete": [
            "root"
          ],
          "DeleteInner": [
            "root"
          ],
          "Manage": [
            "root"
          ],
          "ManageInner": [],
          "Inspect": [],
          "Create": [],
          "Run": [],
          "Rename": [
            "root"
          ],
          "RenameInner": [
            "root"
          ]
        }
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/innocuous_directory/goal.exe",
      "Permissions": {
        "Permissions": {
          "Read": [],
          "Write": [],
          "Delete": [
            "root"
          ],
          "DeleteInner": [],
          "Manage": [
            "5 USERNAME_REPLACE"
          ],
          "ManageInner": [],
          "Inspect": [],
          "Create": [],
          "Run": [
            "root"
          ],
          "Rename": [
            "root"
          ],
          "RenameInner": []
        }
      },
      "IsDirectory": false,
      "IsObfuscated": true,
      "Contents": "#EXECUTABLE_HEADER___\nsay #FFFF22 \"You have already used this trophy lol. Good thinking tho\"\n#"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/innocuous_directory/msg.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "its not a bug"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/mastery7.png",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/ssn.txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/passwords(dont_open).txt",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": "lol baited"
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/school",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": true,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/school/presentation.pptx",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/school/thing.docx",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/school/thing2.docx",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    },
    {
      "Path": "~/users/USERNAME_REPLACE/stuff/school/hw.png",
      "Permissions": {
        "Permissions": {}
      },
      "IsDirectory": false,
      "IsObfuscated": false,
      "Contents": ""
    }
  ]
}